


import numpy as np

def byte_frequency(file_path):
    with open(file_path, 'rb') as file:
        bytes_data = file.read()
        byte_count = np.zeros(256, dtype=int)
        
        for byte in bytes_data:
            byte_count[byte] += 1
        
        byte_frequency = byte_count / len(bytes_data)
        return byte_frequency

def byte_entropy(file_path):
    with open(file_path, 'rb') as file:
        bytes_data = file.read()
        byte_count = np.zeros(256, dtype=int)
        
        for byte in bytes_data:
            byte_count[byte] += 1
        
        byte_probability = byte_count / len(bytes_data)
        byte_entropy = -np.sum(byte_probability * np.log2(byte_probability + 1e-12))
        return byte_entropy

def ngram_frequency(file_path, n):
    with open(file_path, 'rb') as file:
        bytes_data = file.read()
        ngrams = [bytes_data[i:i+n] for i in range(len(bytes_data)-n+1)]
        ngram_count = {}
        
        for ngram in ngrams:
            ngram_count.setdefault(ngram, 0)
            ngram_count[ngram] += 1
        
        return ngram_count

file_path = 'file_to_analyze.exe'
byte_freq = byte_frequency(file_path)
byte_entropy = byte_entropy(file_path)
ngram_freq = ngram_frequency(file_path, n=2)


