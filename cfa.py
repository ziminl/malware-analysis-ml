


import ast

class ControlFlowAnalyzer(ast.NodeVisitor):
    def __init__(self):
        self.flow = []
    
    def visit_FunctionDef(self, node):
        self.flow.append(f"Function: {node.name}")
        self.generic_visit(node)
    
    def visit_If(self, node):
        self.flow.append("If statement")
        self.generic_visit(node)
    
    def visit_For(self, node):
        self.flow.append("For loop")
        self.generic_visit(node)
    
    def visit_While(self, node):
        self.flow.append("While loop")
        self.generic_visit(node)
    
    def visit_Call(self, node):
        self.flow.append(f"Function call: {ast.unparse(node)}")
        self.generic_visit(node)
    
    def analyze(self, code):
        tree = ast.parse(code)
        self.visit(tree)
        return self.flow
##https://www.geeksforgeeks.org/python-program-to-print-all-odd-numbers-in-a-range/
code = """
def example():
    for i in range(10):
        if i % 2 == 0:
            print(i)
        else:
            print('odd')
"""

analyzer = ControlFlowAnalyzer()
flow = analyzer.analyze(code)
for f in flow:
    print(f)


